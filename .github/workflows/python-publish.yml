name: PyPI CI and docs

on:
  release:
    types: [ created ]

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-22.04 ]
        python-version: [ 3.8, 3.9, "3.10" ]
        django-version: [ 3.1, 3.2, 4.0, 4.1, 4.2 ]

    steps:
      - name: Install system dependencies (windows)
        if: matrix.os == 'windows-latest'
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: zlib

      - uses: actions/checkout@v4.1.6

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python dev.py -no-container
          pip install -q Django==${{ matrix.django-version }}
          python -m pip install --upgrade pip
          python setup.py install

      - name: Test with pytest
        run: |
          python runtests.py

  deploy:
    needs: test
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4.1.6

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Build and publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*

  docs:
    needs:
      - test
      - deploy
    runs-on: ubuntu-22.04
    steps:
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Checkout branch
        uses: actions/checkout@v4.1.6

      - name: Restore docs environment and build docs
        run: |
          python dev.py -no-container --with-docs
          mkdocs build

      - name: Commit documentation changes
        run: |
          git clone https://github.com/neutronX/django-markdownx.git --branch gh-pages --single-branch gh-pages
          rm -rf gh-pages/docs
          mkdir gh-pages/docs
          cp -r docs/* gh-pages/docs/
          cd gh-pages
          VERSION=$(python setup.py -V)
          echo ${VERSION} >> version
          > .nojekyll
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Update documentations" -a || true
          echo "Documentations for v${VERSION} has been deployed."
          # The above command will fail if no changes were present, so we ignore
          # the return code.

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch: gh-pages
          directory: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
